{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun kushwaha\\\\reacttut\\\\awesomeapp\\\\src\\\\index.js\";\n// import { render } from '@testing-library/react';\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// ReactDOM.render(\n//   <h1>This is the heading tag</h1>,\n//   document.getElementById('root')\n// );\n//JS element like structire inside the render method is known as the JSX\n//render method is kya dikhana hai aur kaha dikhana hai\n// Q. how to render multipel jsx elements inside the render() ?\n//by using the div tag\n// ReactDOM.render(\n// <div>\n//  <h1>This is the heading tag</h1>\n//   <i>This is the Italic tag</i>\n//   <b>This is the bold tag</b>\n// </div>,\n//    document.getElementById(\"root\"));\n//by using the square braces\n//by passing the value in the form of an Array of an JSX Element\n// ReactDOM.render(\n//   [\n//    <h1>This is the heading tag</h1>,\n//     <i>This is the Italic tag</i>,\n//     <b>This is the bold tag</b>\n//   ],\n//      document.getElementById(\"root\"));\n//Q.Understanding and the use of React.Fragment\n// as we know we can use only single JSX element inside the Render method and if we need to add multiple then we use the div Element as\n// parent of all the multiple element. as a result there is extra div in the code which is time consuming and makes difficult to access the\n// code. So we use React.Fragment in the palce of div\n// ReactDOM.render(\n//  <React.Fragment>\n//    <h2>Hello World</h2>\n//    <h3>this is h3</h3>\n//    <h4>This is h4</h4>\n// </React.Fragment>,\n// document.getElementById(\"root\")\n// )\n//Q.project 1 create a webspage which show top 5 webseries\n// ReactDOM.render(<React.Fragment>\n// <h1>\n// <center>My top 5 favourite webseries are</center>\n// </h1>\n// <ol>\n//   <li>Abhay</li>\n//   <li>2.0</li>\n//   <li>Boss</li>\n//   <li>Abhay 2</li>\n//   <li>mumbai saga</li>\n// </ol>\n// </React.Fragment>, document.getElementById(\"root\"));\n//Q. How to declare an Javascript expression inside the XML element ?\n// if need to add variable inside the XML Element we use the curly braces to declare\n// var fname = \"tarun\";\n// ReactDOM.render(\n// <>\n//   <h1>My name is {fname}</h1>\n//   <p>This is the paragraph tag</p>\n// </>,\n// document.getElementById(\"root\"));\n//Q. Template Literal in JSX Elements ?\n// 1.How to add multipe Javascript variable in the XML Element ?\n// 1.How to add multipe Javascript variable in the XML Element using Template String ?\n// const fname = \"Tarun\";\n// const lname = \"Kushwaha\";\n// ReactDOM.render(<React.Fragment>\n// {/* <h1>This is my full name {fname} {lname}</h1>  //this is the first method to add multiple Javascript Expression to the XML Element */}\n// {/* <h1>This is my full name {fname + \" \" + lname}</h1>  //this is the Second method to add multiple Javascript Expression to the XML Element */}\n// {/* <h1>This is my full name {`${fname} ${lname}`}</h1>  //this is the Third method to add multiple Javascript Expression to the XML Element using template literal */}\n// {/* <h1>{`This is my full name ${fname} ${lname}`}</h1>  //this statement is the purely created using the template Literal */}\n// <h2>I am good boy</h2>\n// </React.Fragment>,\n// document.getElementById(\"root\"));\n//Q. Project to display date and time ?\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// let date = new Date();\n// let getDate = date.toLocaleDateString();\n// let getTime = date.toLocaleString();\n// ReactDOM.render(\n//   <>\n//     <h1>This is the Date and time</h1>\n//     <b>Today's Date is {getDate}</b>\n//     <br></br>\n//     <b>Current time is is {getTime}</b>\n//   </>,\n//   document.getElementById(\"root\")\n// );\n//How to add Attribute to the JSX Element ?\n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n// let img1 = \"https://picsum.photos/260/300\";\n// let img2 = \"https://picsum.photos/600/300\";\n// let links = \"www.google.com\"\n// ReactDOM.render(\n//   <>\n//     <h1 contentEditable = \"true\">This is the heading first</h1><br/>     {/*this is known as self closing tag in the JSX */}\n//     <img src = \"https://picsum.photos/200/300\" alt = \"The image has been removed\"/>       {/*as we learned earlier that img tag don't has closing tag so we declare self closing tag in JSX Element*/}\n//     <img src = \"https://picsum.photos/300/400\" alt = \"The image has been removed\"/>       \n//     <img src = {img1}  alt = \"The image has been removed\"/>  \n//     <a href= {links}>\n//       <img src = {img2} alt = \"The image has been removed\"/>   \n//     </a>     \n//   </>,\n//   document.getElementById(\"root\")\n// );\n//Q. Adding CSS Styling and importing CSS file ?\n// Q. Adding Google fonts to thhe Website ? \n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// var img = \"https://picsum.photos/200/300\";\n// var img1 = \"https://picsum.photos/240/400\";\n// var img3 = \"https://picsum.photos/300/400\";\n// var link = \"www.google.com\";\n// ReactDOM.render(\n//   <>\n//   <div className = \"content\">\n//     <h1>This is the Heading Tag</h1>\n//   </div>\n//     <div className = \"box\">\n//     <img src = {img} alt=\"This is the alternate text of the Image\"/>\n//     <img src = {img1} alt=\"This is the alternate text of the Image\"/>\n//     <a href = {link} target= \"_blank\">\n//     <img src = {img3} alt=\"This is the alternate text of the Image\"/>\n//     </a>\n//     </div>\n//   </>,\n//   document.getElementById(\"root\")\n// )\n//Q. internal css and inline styling in reactjs?\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// let img = \"https://picsum.photos/200/300\";\n// let img1 = \"https://picsum.photos/250/300\";\n// let img2 = \"https://picsum.photos/150/300\";\n// let data = \"This image has been removed\";\n// let data1 = \"This image has been removed\";\n// let data2 = \"This image has been removed\";\n// let style_h1 = {     //this is how internal styling works in reactJs by creating an Object\n//   fontFamily : \"century gothic\",\n//   fontWeight : \"bolder\",\n//   color: \"lightgreen\",\n//   textTransform : \"Capitalize\",\n//   textAlign : \"center\"\n// }\n// ReactDOM.render(\n//   <>\n//    <h1 style= {style_h1}>This is the Heading Tag</h1>\n//     <div className = \"container\">\n//     <img src= {img}  alt= {data}/>\n//     <img src= {img1}  alt= {data1}/>\n//     <img src= {img2}  alt= {data2}/>\n//     </div>\n//   </>,\n//   document.getElementById(\"root\")\n// )\n//Q. create a greeting message (Project);\nimport React from \"react\";\nimport reactDom from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet new_style = {\n  fontFamily: 'Raleway',\n  fontWeight: \"bolder\",\n  color: \"red\"\n};\nlet greeting = {\n  color: \"Orange\"\n};\nreactDom.render( /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: new_style,\n      children: [\"Hello Sir, \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: greeting,\n        children: \"Good Morning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 4\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 245,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Tarun kushwaha/reacttut/awesomeapp/src/index.js"],"names":["React","reactDom","new_style","fontFamily","fontWeight","color","greeting","render","document","getElementById"],"mappingskB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,IAAIC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,SADE;AAEdC,EAAAA,UAAU,EAAE,QAFE;AAGdC,EAAAA,KAAK,EAAG;AAHM,CAAhB;AAMA,IAAIC,QAAQ,GAAG;AACbD,EAAAA,KAAK,EAAG;AADK,CAAf;AAKAJ,QAAQ,CAACM,MAAT,eAEE,QAAC,KAAD,CAAO,QAAP;AAAA,yBACC;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA,2BAEC;AAAI,MAAA,KAAK,EAAIL,SAAb;AAAA,6CAAmC;AAAM,QAAA,KAAK,EAAII,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QAFF,EASEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATF","sourcesContent":["// import { render } from '@testing-library/react';\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n\n// ReactDOM.render(\n//   <h1>This is the heading tag</h1>,\n//   document.getElementById('root')\n// );\n\n\n//JS element like structire inside the render method is known as the JSX\n\n//render method is kya dikhana hai aur kaha dikhana hai\n\n// Q. how to render multipel jsx elements inside the render() ?\n\n//by using the div tag\n\n// ReactDOM.render(\n// <div>\n\n//  <h1>This is the heading tag</h1>\n//   <i>This is the Italic tag</i>\n//   <b>This is the bold tag</b>\n\n// </div>,\n//    document.getElementById(\"root\"));\n\n//by using the square braces\n//by passing the value in the form of an Array of an JSX Element\n\n// ReactDOM.render(\n//   [\n  \n//    <h1>This is the heading tag</h1>,\n//     <i>This is the Italic tag</i>,\n//     <b>This is the bold tag</b>\n  \n//   ],\n//      document.getElementById(\"root\"));\n\n//Q.Understanding and the use of React.Fragment\n\n// as we know we can use only single JSX element inside the Render method and if we need to add multiple then we use the div Element as\n// parent of all the multiple element. as a result there is extra div in the code which is time consuming and makes difficult to access the\n// code. So we use React.Fragment in the palce of div\n\n// ReactDOM.render(\n//  <React.Fragment>\n  \n//    <h2>Hello World</h2>\n//    <h3>this is h3</h3>\n//    <h4>This is h4</h4>\n\n// </React.Fragment>,\n// document.getElementById(\"root\")\n// )\n\n//Q.project 1 create a webspage which show top 5 webseries\n\n// ReactDOM.render(<React.Fragment>\n// <h1>\n// <center>My top 5 favourite webseries are</center>\n// </h1>\n\n// <ol>\n\n//   <li>Abhay</li>\n//   <li>2.0</li>\n//   <li>Boss</li>\n//   <li>Abhay 2</li>\n//   <li>mumbai saga</li>\n\n// </ol>\n// </React.Fragment>, document.getElementById(\"root\"));\n\n//Q. How to declare an Javascript expression inside the XML element ?\n// if need to add variable inside the XML Element we use the curly braces to declare\n\n// var fname = \"tarun\";\n\n// ReactDOM.render(\n// <>\n//   <h1>My name is {fname}</h1>\n//   <p>This is the paragraph tag</p>\n// </>,\n// document.getElementById(\"root\"));\n\n//Q. Template Literal in JSX Elements ?\n\n// 1.How to add multipe Javascript variable in the XML Element ?\n// 1.How to add multipe Javascript variable in the XML Element using Template String ?\n\n// const fname = \"Tarun\";\n// const lname = \"Kushwaha\";\n\n// ReactDOM.render(<React.Fragment>\n\n// {/* <h1>This is my full name {fname} {lname}</h1>  //this is the first method to add multiple Javascript Expression to the XML Element */}\n// {/* <h1>This is my full name {fname + \" \" + lname}</h1>  //this is the Second method to add multiple Javascript Expression to the XML Element */}\n// {/* <h1>This is my full name {`${fname} ${lname}`}</h1>  //this is the Third method to add multiple Javascript Expression to the XML Element using template literal */}\n// {/* <h1>{`This is my full name ${fname} ${lname}`}</h1>  //this statement is the purely created using the template Literal */}\n\n// <h2>I am good boy</h2>\n\n// </React.Fragment>,\n// document.getElementById(\"root\"));\n\n//Q. Project to display date and time ?\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n\n// let date = new Date();\n// let getDate = date.toLocaleDateString();\n// let getTime = date.toLocaleString();\n\n// ReactDOM.render(\n//   <>\n\n//     <h1>This is the Date and time</h1>\n//     <b>Today's Date is {getDate}</b>\n//     <br></br>\n//     <b>Current time is is {getTime}</b>\n\n//   </>,\n//   document.getElementById(\"root\")\n// );\n\n//How to add Attribute to the JSX Element ?\n\n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n\n// let img1 = \"https://picsum.photos/260/300\";\n// let img2 = \"https://picsum.photos/600/300\";\n// let links = \"www.google.com\"\n\n\n// ReactDOM.render(\n//   <>\n\n//     <h1 contentEditable = \"true\">This is the heading first</h1><br/>     {/*this is known as self closing tag in the JSX */}\n//     <img src = \"https://picsum.photos/200/300\" alt = \"The image has been removed\"/>       {/*as we learned earlier that img tag don't has closing tag so we declare self closing tag in JSX Element*/}\n//     <img src = \"https://picsum.photos/300/400\" alt = \"The image has been removed\"/>       \n//     <img src = {img1}  alt = \"The image has been removed\"/>  \n   \n//     <a href= {links}>\n//       <img src = {img2} alt = \"The image has been removed\"/>   \n//     </a>     \n\n//   </>,\n//   document.getElementById(\"root\")\n// );\n\n//Q. Adding CSS Styling and importing CSS file ?\n// Q. Adding Google fonts to thhe Website ? \n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n\n// var img = \"https://picsum.photos/200/300\";\n// var img1 = \"https://picsum.photos/240/400\";\n// var img3 = \"https://picsum.photos/300/400\";\n// var link = \"www.google.com\";\n\n// ReactDOM.render(\n//   <>\n\n//   <div className = \"content\">\n//     <h1>This is the Heading Tag</h1>\n//   </div>\n\n//     <div className = \"box\">\n\n//     <img src = {img} alt=\"This is the alternate text of the Image\"/>\n//     <img src = {img1} alt=\"This is the alternate text of the Image\"/>\n    \n//     <a href = {link} target= \"_blank\">\n//     <img src = {img3} alt=\"This is the alternate text of the Image\"/>\n//     </a>\n\n//     </div>\n//   </>,\n//   document.getElementById(\"root\")\n// )\n\n//Q. internal css and inline styling in reactjs?\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n\n// let img = \"https://picsum.photos/200/300\";\n// let img1 = \"https://picsum.photos/250/300\";\n// let img2 = \"https://picsum.photos/150/300\";\n// let data = \"This image has been removed\";\n// let data1 = \"This image has been removed\";\n// let data2 = \"This image has been removed\";\n\n// let style_h1 = {     //this is how internal styling works in reactJs by creating an Object\n  \n//   fontFamily : \"century gothic\",\n//   fontWeight : \"bolder\",\n//   color: \"lightgreen\",\n//   textTransform : \"Capitalize\",\n//   textAlign : \"center\"\n// }\n\n// ReactDOM.render(\n//   <>\n\n//    <h1 style= {style_h1}>This is the Heading Tag</h1>\n//     <div className = \"container\">\n\n//     <img src= {img}  alt= {data}/>\n//     <img src= {img1}  alt= {data1}/>\n//     <img src= {img2}  alt= {data2}/>\n\n//     </div>\n//   </>,\n//   document.getElementById(\"root\")\n// )\n\n//Q. create a greeting message (Project);\n\nimport React from \"react\";\nimport reactDom from \"react-dom\";\n\nlet new_style = {\n  fontFamily: 'Raleway',\n  fontWeight: \"bolder\",\n  color : \"red\"\n}\n\nlet greeting = {\n  color : \"Orange\"\n}\n\n\nreactDom.render(\n  \n  <React.Fragment>\n   <div className = \"box\">\n   \n    <h1 style = {new_style}>Hello Sir, <span style = {greeting}>Good Morning</span></h1>\n   \n   </div>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n\n)\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}