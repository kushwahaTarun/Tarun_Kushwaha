{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun kushwaha\\\\reacttut\\\\awesomeapp\\\\src\\\\Keep.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport KeepHeader from \"./KeepHeader\";\nimport KeepNote from \"./KeepNote\";\nimport Note from \"./Note\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Keep = () => {\n  _s();\n\n  let [storeNote, newStoreNote] = useState([]);\n\n  let frwrdData = data => {\n    newStoreNote(preData => {\n      return [...preData, data];\n    });\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(KeepHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeepNote, {\n      pop: frwrdData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), storeNote.map((values, index) => {\n      return /*#__PURE__*/_jsxDEV(Note, {\n        items: values,\n        id: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Keep, \"efO1GdqOlTBA6mOhTi3NPp23CZ0=\");\n\n_c = Keep;\nexport default Keep;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keep\");","map":{"version":3,"sources":["C:/Users/Tarun kushwaha/reacttut/awesomeapp/src/Keep.jsx"],"names":["React","useState","KeepHeader","KeepNote","Note","Keep","storeNote","newStoreNote","frwrdData","data","preData","console","log","map","values","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,MAAI,CAACC,SAAD,EAAaC,YAAb,IAA6BN,QAAQ,CAAC,EAAD,CAAzC;;AAEA,MAAIO,SAAS,GAAIC,IAAD,IAAU;AACxBF,IAAAA,YAAY,CAAEG,OAAD,IAAa;AACxB,aAAO,CAAC,GAAGA,OAAJ,EAAcD,IAAd,CAAP;AACD,KAFW,CAAZ;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAED,GAND;;AAQA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,GAAG,EAAID;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,SAAS,CAACO,GAAV,CAAc,CAACC,MAAD,EAAUC,KAAV,KAAoB;AACjC,0BAAO,QAAC,IAAD;AAAM,QAAA,KAAK,EAAID,MAAf;AAAuB,QAAA,EAAE,EAAIC;AAA7B,SAA2CA,KAA3C;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CAHH;AAAA,kBADF;AASD,CArBD;;GAAMV,I;;KAAAA,I;AAuBN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport KeepHeader from \"./KeepHeader\";\r\nimport KeepNote from \"./KeepNote\";\r\nimport Note from \"./Note\";\r\n\r\nconst Keep = () => {\r\n\r\n  let [storeNote , newStoreNote] = useState([]);\r\n\r\n  let frwrdData = (data) => {\r\n    newStoreNote((preData) => {\r\n      return [...preData , data];\r\n    })\r\n    console.log(data);\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <KeepHeader/>\r\n      <KeepNote pop = {frwrdData}/>\r\n      {storeNote.map((values , index) => {\r\n        return <Note items = {values} id = {index} key = {index}/>\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Keep;"]},"metadata":{},"sourceType":"module"}