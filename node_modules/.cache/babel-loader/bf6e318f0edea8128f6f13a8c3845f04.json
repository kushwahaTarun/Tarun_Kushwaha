{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun kushwaha\\\\reacttut\\\\awesomeapp\\\\src\\\\Clone.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CloneHeader from \"./CloneHeader\";\nimport CloneNote from \"./CloneNote\";\nimport CloneDisp from \"./CloneDisp\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Clone = () => {\n  _s();\n\n  let [newNote, setNewNote] = useState([]);\n\n  let frwrdData = data => {\n    setNewNote(preData => {\n      return [...preData, data];\n    });\n    data({\n      title: \"\",\n      content: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CloneHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CloneNote, {\n      onSelect: frwrdData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), newNote.map((values, index) => {\n      return /*#__PURE__*/_jsxDEV(CloneDisp, {\n        itemTitle: values.title,\n        itemContent: values.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Clone, \"outR68drySMSubRbsgvaANQPZRg=\");\n\n_c = Clone;\nexport default Clone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clone\");","map":{"version":3,"sources":["C:/Users/Tarun kushwaha/reacttut/awesomeapp/src/Clone.jsx"],"names":["React","useState","CloneHeader","CloneNote","CloneDisp","Clone","newNote","setNewNote","frwrdData","data","preData","title","content","map","values","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sDAAP;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,MAAI,CAACC,OAAD,EAAWC,UAAX,IAAyBN,QAAQ,CAAC,EAAD,CAArC;;AAEA,MAAIO,SAAS,GAAIC,IAAD,IAAU;AACtBF,IAAAA,UAAU,CAAEG,OAAD,IAAa;AACpB,aAAO,CAAC,GAAGA,OAAJ,EAAcD,IAAd,CAAP;AACH,KAFS,CAAV;AAGAA,IAAAA,IAAI,CAAC;AACDE,MAAAA,KAAK,EAAE,EADN;AAEDC,MAAAA,OAAO,EAAE;AAFR,KAAD,CAAJ;AAIH,GARD;;AAUF,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAIJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,OAAO,CAACO,GAAR,CAAY,CAACC,MAAD,EAAUC,KAAV,KAAoB;AAC7B,0BAAO,QAAC,SAAD;AAAW,QAAA,SAAS,EAAID,MAAM,CAACH,KAA/B;AAAsC,QAAA,WAAW,EAAIG,MAAM,CAACF;AAA5D;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA,CAHH;AAAA,kBADF;AAUD,CAvBD;;GAAMP,K;;KAAAA,K;AAyBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport CloneHeader from \"./CloneHeader\";\r\nimport CloneNote from \"./CloneNote\";\r\nimport CloneDisp from \"./CloneDisp\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Clone = () => {\r\n    let [newNote , setNewNote] = useState([]);\r\n\r\n    let frwrdData = (data) => {\r\n        setNewNote((preData) => {\r\n            return [...preData , data];\r\n        })\r\n        data({\r\n            title: \"\",\r\n            content: \"\",\r\n          })\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <CloneHeader />\r\n      <CloneNote onSelect = {frwrdData}/>\r\n      {newNote.map((values , index) => {\r\n          return <CloneDisp itemTitle = {values.title} itemContent = {values.content} /> \r\n      })}\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Clone;\r\n"]},"metadata":{},"sourceType":"module"}