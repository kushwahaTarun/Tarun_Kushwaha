{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun kushwaha\\\\reacttut\\\\awesomeapp\\\\src\\\\Clone.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CloneHeader from \"./CloneHeader\";\nimport CloneNote from \"./CloneNote\";\nimport CloneDisp from \"./CloneDisp\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Clone = data => {\n  _s();\n\n  let [newNote, setNewNote] = useState([]);\n\n  let frwrdData = data => {\n    setNewNote(preData => {\n      return [...preData, data];\n    });\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CloneHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CloneNote, {\n      onSelect: frwrdData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), newNote.map((values, index) => {\n      return /*#__PURE__*/_jsxDEV(CloneDisp, {\n        title: values.title,\n        content: values.content,\n        id: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Clone, \"outR68drySMSubRbsgvaANQPZRg=\");\n\n_c = Clone;\nexport default Clone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clone\");","map":{"version":3,"sources":["C:/Users/Tarun kushwaha/reacttut/awesomeapp/src/Clone.jsx"],"names":["React","useState","CloneHeader","CloneNote","CloneDisp","Clone","data","newNote","setNewNote","frwrdData","preData","console","log","map","values","index","title","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sDAAP;;;;AAEA,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAAA;;AACpB,MAAI,CAACC,OAAD,EAAWC,UAAX,IAAyBP,QAAQ,CAAC,EAAD,CAArC;;AAEA,MAAIQ,SAAS,GAAIH,IAAD,IAAU;AACtBE,IAAAA,UAAU,CAAEE,OAAD,IAAa;AACpB,aAAO,CAAC,GAAGA,OAAJ,EAAcJ,IAAd,CAAP;AACH,KAFS,CAAV;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH,GALD;;AAOF,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAIG;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,OAAO,CAACM,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5B,0BAAO,QAAC,SAAD;AAAW,QAAA,KAAK,EAAID,MAAM,CAACE,KAA3B;AAAkC,QAAA,OAAO,EAAIF,MAAM,CAACG,OAApD;AAA6D,QAAA,EAAE,EAAIF;AAAnE,SAAiFA,KAAjF;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA,CAHH;AAAA,kBADF;AASD,CAnBD;;GAAMV,K;;KAAAA,K;AAqBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport CloneHeader from \"./CloneHeader\";\r\nimport CloneNote from \"./CloneNote\";\r\nimport CloneDisp from \"./CloneDisp\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Clone = (data) => {\r\n    let [newNote , setNewNote] = useState([]);\r\n\r\n    let frwrdData = (data) => {\r\n        setNewNote((preData) => {\r\n            return [...preData , data]\r\n        })\r\n        console.log(data);\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <CloneHeader />\r\n      <CloneNote onSelect = {frwrdData}/>\r\n      {newNote.map((values, index) => {\r\n          return <CloneDisp title = {values.title} content = {values.content} id = {index} key = {index}></CloneDisp>\r\n      })    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Clone;\r\n"]},"metadata":{},"sourceType":"module"}