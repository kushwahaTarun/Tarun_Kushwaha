{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun kushwaha\\\\reacttut\\\\awesomeapp\\\\src\\\\Clone.jsx\";\nimport React, { useState } from \"react\";\nimport CloneHeader from \"./CloneHeader\";\nimport CloneNote from \"./CloneNote\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Clone = () => {\n  // let [newNote , setNewNote] = useState([]);\n  const frwrdData = () => {\n    alert(\"this is the alert\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CloneHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CloneNote, {\n      onSelect: frwrdData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Clone;\nexport default Clone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clone\");","map":{"version":3,"sources":["C:/Users/Tarun kushwaha/reacttut/awesomeapp/src/Clone.jsx"],"names":["React","useState","CloneHeader","CloneNote","Clone","frwrdData","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sDAAP;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB;AAEA,QAAMC,SAAS,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACH,GAFD;;AAIF,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAID;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAOD,CAdD;;KAAMD,K;AAgBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport CloneHeader from \"./CloneHeader\";\r\nimport CloneNote from \"./CloneNote\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Clone = () => {\r\n    // let [newNote , setNewNote] = useState([]);\r\n\r\n    const frwrdData = () => {\r\n        alert(\"this is the alert\");\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <CloneHeader />\r\n      <CloneNote onSelect = {frwrdData}/>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Clone;\r\n"]},"metadata":{},"sourceType":"module"}