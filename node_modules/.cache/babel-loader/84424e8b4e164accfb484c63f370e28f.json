{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun kushwaha\\\\reacttut\\\\awesomeapp\\\\src\\\\Clone.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CloneHeader from \"./CloneHeader\";\nimport CloneNote from \"./CloneNote\";\nimport CloneDisp from \"./CloneDisp\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Clone = () => {\n  _s();\n\n  let [newNote, setNewNote] = useState([]);\n\n  let frwrdData = data => {\n    setNewNote(preData => {\n      return [...preData, data];\n    });\n  };\n\n  let delData = id => {\n    setNewNote.filter((preValue, index) => {\n      return index != id;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CloneHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CloneNote, {\n      onSelect: frwrdData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), newNote.map((values, index) => {\n      return /*#__PURE__*/_jsxDEV(CloneDisp, {\n        itemTitle: values.title,\n        onSelect: delData,\n        itemContent: values.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Clone, \"iIBo68f0o/EwUCQ2LJzUfNEZ4fI=\");\n\n_c = Clone;\nexport default Clone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clone\");","map":{"version":3,"sources":["C:/Users/Tarun kushwaha/reacttut/awesomeapp/src/Clone.jsx"],"names":["React","useState","CloneHeader","CloneNote","CloneDisp","Clone","newNote","setNewNote","frwrdData","data","preData","delData","id","filter","preValue","index","map","values","title","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sDAAP;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAApC;;AAEA,MAAIO,SAAS,GAAIC,IAAD,IAAU;AACxBF,IAAAA,UAAU,CAAEG,OAAD,IAAa;AACtB,aAAO,CAAC,GAAGA,OAAJ,EAAaD,IAAb,CAAP;AACD,KAFS,CAAV;AAGD,GAJD;;AAMA,MAAIE,OAAO,GAAIC,EAAD,IAAQ;AAClBL,IAAAA,UAAU,CAACM,MAAX,CAAkB,CAACC,QAAD,EAAYC,KAAZ,KAAsB;AACpC,aAAOA,KAAK,IAAIH,EAAhB;AACH,KAFD;AAGH,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEJ;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,OAAO,CAACU,GAAR,CAAY,CAACC,MAAD,EAASF,KAAT,KAAmB;AAC9B,0BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEE,MAAM,CAACC,KAA7B;AAAoC,QAAA,QAAQ,EAAIP,OAAhD;AAAyD,QAAA,WAAW,EAAEM,MAAM,CAACE;AAA7E;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJA,CAHH;AAAA,kBADF;AAWD,CA1BD;;GAAMd,K;;KAAAA,K;AA4BN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport CloneHeader from \"./CloneHeader\";\r\nimport CloneNote from \"./CloneNote\";\r\nimport CloneDisp from \"./CloneDisp\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Clone = () => {\r\n  let [newNote, setNewNote] = useState([]);\r\n\r\n  let frwrdData = (data) => {\r\n    setNewNote((preData) => {\r\n      return [...preData, data];\r\n    });\r\n  };\r\n\r\n  let delData = (id) => {\r\n      setNewNote.filter((preValue , index) => {\r\n          return index != id;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CloneHeader />\r\n      <CloneNote onSelect={frwrdData} />\r\n      {newNote.map((values, index) => {\r\n        return (\r\n          <CloneDisp itemTitle={values.title} onSelect = {delData} itemContent={values.content} />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Clone;\r\n"]},"metadata":{},"sourceType":"module"}