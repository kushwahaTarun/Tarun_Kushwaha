{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun kushwaha\\\\reacttut\\\\awesomeapp\\\\src\\\\index.js\";\nimport { render } from '@testing-library/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // ReactDOM.render(\n//   <h1>This is the heading tag</h1>,\n//   document.getElementById('root')\n// );\n//JS element like structire inside the render method is known as the JSX\n//render method is kya dikhana hai aur kaha dikhana hai\n// Q. how to render multipel jsx elements inside the render() ?\n//by using the div tag\n// ReactDOM.render(\n// <div>\n//  <h1>This is the heading tag</h1>\n//   <i>This is the Italic tag</i>\n//   <b>This is the bold tag</b>\n// </div>,\n//    document.getElementById(\"root\"));\n//by using the square braces\n//by passing the value in the form of an Array of an JSX Element\n// ReactDOM.render(\n//   [\n//    <h1>This is the heading tag</h1>,\n//     <i>This is the Italic tag</i>,\n//     <b>This is the bold tag</b>\n//   ],\n//      document.getElementById(\"root\"));\n//Q.Understanding and the use of React.Fragment\n// as we know we can use only single JSX element inside the Render method and if we need to add multiple then we use the div Element as\n// parent of all the multiple element. as a result there is extra div in the code which is time consuming and makes difficult to access the\n// code. So we use React.Fragment in the palce of div\n// ReactDOM.render(\n//  <React.Fragment>\n//    <h2>Hello World</h2>\n//    <h3>this is h3</h3>\n//    <h4>This is h4</h4>\n// </React.Fragment>,\n// document.getElementById(\"root\")\n// )\n//Q.project 1 create a webspage which show top 5 webseries\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: \"My top 5 favourite webseries are\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Abhay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"2.0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Boss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Abhay 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"mumbai saga\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 1\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Tarun kushwaha/reacttut/awesomeapp/src/index.js"],"names":["render","React","ReactDOM","document","getElementById"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAGA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAEAA,QAAQ,CAACF,MAAT,eAAgB,QAAC,KAAD,CAAO,QAAP;AAAA,0BAChB;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADgB,eAKhB;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UALgB;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,EAcmBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAdnB","sourcesContent":["import { render } from '@testing-library/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\n// ReactDOM.render(\n//   <h1>This is the heading tag</h1>,\n//   document.getElementById('root')\n// );\n\n\n//JS element like structire inside the render method is known as the JSX\n\n//render method is kya dikhana hai aur kaha dikhana hai\n\n// Q. how to render multipel jsx elements inside the render() ?\n\n//by using the div tag\n\n// ReactDOM.render(\n// <div>\n\n//  <h1>This is the heading tag</h1>\n//   <i>This is the Italic tag</i>\n//   <b>This is the bold tag</b>\n\n// </div>,\n//    document.getElementById(\"root\"));\n\n//by using the square braces\n//by passing the value in the form of an Array of an JSX Element\n\n// ReactDOM.render(\n//   [\n  \n//    <h1>This is the heading tag</h1>,\n//     <i>This is the Italic tag</i>,\n//     <b>This is the bold tag</b>\n  \n//   ],\n//      document.getElementById(\"root\"));\n\n//Q.Understanding and the use of React.Fragment\n\n// as we know we can use only single JSX element inside the Render method and if we need to add multiple then we use the div Element as\n// parent of all the multiple element. as a result there is extra div in the code which is time consuming and makes difficult to access the\n// code. So we use React.Fragment in the palce of div\n\n// ReactDOM.render(\n//  <React.Fragment>\n  \n//    <h2>Hello World</h2>\n//    <h3>this is h3</h3>\n//    <h4>This is h4</h4>\n\n// </React.Fragment>,\n// document.getElementById(\"root\")\n// )\n\n//Q.project 1 create a webspage which show top 5 webseries\n\nReactDOM.render(<React.Fragment>\n<h1>\n<center>My top 5 favourite webseries are</center>\n</h1>\n\n<ol>\n\n  <li>Abhay</li>\n  <li>2.0</li>\n  <li>Boss</li>\n  <li>Abhay 2</li>\n  <li>mumbai saga</li>\n\n</ol>\n</React.Fragment>, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}