{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun kushwaha\\\\reacttut\\\\awesomeapp\\\\src\\\\Plus.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Plus = () => {\n  _s();\n\n  let dispTime = new Date().toLocaleTimeString();\n  let [oldTime, currentTime] = useState(dispTime);\n\n  let ready = () => {\n    dispTime = new Date().toLocaleTimeString();\n    currentTime(dispTime);\n  };\n\n  setInterval(ready, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: dispTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ready,\n      children: \"Watch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Plus, \"OxFxuSsC4Ud/YxMu6WEa8hARD24=\");\n\n_c = Plus;\nexport default Plus;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plus\");","map":{"version":3,"sources":["C:/Users/Tarun kushwaha/reacttut/awesomeapp/src/Plus.jsx"],"names":["React","useState","Plus","dispTime","Date","toLocaleTimeString","oldTime","currentTime","ready","setInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAf;AACA,MAAI,CAACC,OAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAACE,QAAD,CAArC;;AAEA,MAAIK,KAAK,GAAG,MAAM;AAChBL,IAAAA,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAX;AACAE,IAAAA,WAAW,CAACJ,QAAD,CAAX;AACD,GAHD;;AAKAM,EAAAA,WAAW,CAACD,KAAD,EAAS,IAAT,CAAX;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAIK,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAOD,CAnBD;;GAAMN,I;;KAAAA,I;AAqBN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Plus = () => {\r\n\r\n  let dispTime = new Date().toLocaleTimeString();\r\n  let [oldTime, currentTime] = useState(dispTime);\r\n\r\n  let ready = () => {\r\n    dispTime = new Date().toLocaleTimeString();\r\n    currentTime(dispTime);\r\n  }\r\n\r\n  setInterval(ready , 1000)\r\n  \r\n  return(\r\n    <>\r\n      <h1>{dispTime}</h1>\r\n      <button onClick = {ready}>Watch</button>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default Plus;"]},"metadata":{},"sourceType":"module"}